global main
global other

main:
push_i 15
store_g a
push_i 3
store_g b

push_f32 100
push_i 1
ecall sayf
push_i 1
ecall sin
push_i 1
ecall sayf
pop

load_g a
load_g b
mul
fin

other:
push_i 0
ecall bogus
fin

sub:
    add
    ret

# f: rt, fh, parm_cnt
# p0, p1, p2, 3, v0, v1, v2, 3

#call sub
#push_i 3
#fin

#sub:
#push_i 2
#ret

#push_i 3
#loop:
#sub_1
#dup
#ifgt loop
#pop
#call
#fin

#redo:
#push_rnd
#push_i -123
#and
# sd
#push_u8 0x1f  # sd
#  sub
#ifgt   redo
#fin
